syntax = "proto3";

package cloud.api.pipelines.v1;

import "pipelines/v1/pipeline.proto";
import "github.com/videocoin/cloud-api/rpc/health.proto";
import "github.com/videocoin/cloud-api/profiles/v1/profiles.proto";
import "github.com/videocoin/cloud-api/jobs/v1/job.proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

service PipelineService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc Create(CreatePipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            post: "/api/v1/pipelines",
            body: "*"
        };
    }

    rpc List(google.protobuf.Empty) returns (ListResponse) {
        option (google.api.http) = {
            get: "/api/v1/pipelines"
        };
    }

    rpc Delete(PipelineRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/pipelines/{pipeline_id}",
        };
    }

    rpc Update(UpdatePipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            put: "/api/v1/pipelines/{id}",
            body: "*"
        };
    }

    rpc Get(PipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            get: "/api/v1/pipelines/{pipeline_id}"
        };
    }

    rpc ListStreams(PipelineRequest) returns (cloud.api.jobs.v1.JobProfiles) {
        option (google.api.http) = {
            get: "/api/v1/pipelines/{pipeline_id}/streams"
        };
    }

    rpc CreateStream(CreateStreamRequest) returns (cloud.api.jobs.v1.JobProfile) {
        option (google.api.http) = {
            post: "/api/v1/streams"
            body: "*"
        };
    }

    rpc DeleteStream(StreamRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/streams/{stream_id}"
        };
    }

    rpc GetStream(StreamRequest) returns (cloud.api.jobs.v1.JobProfile) {
        option (google.api.http) = {
            get: "/api/v1/streams/{stream_id}"
        };
    }

    rpc RunStream(StreamRequest) returns (cloud.api.jobs.v1.JobProfile) {
        option (google.api.http) = {
            post: "/api/v1/streams/{stream_id}/run"
            body: "*"
        };
    }

    rpc CancelStream(StreamRequest) returns (cloud.api.jobs.v1.JobProfile) {
        option (google.api.http) = {
            post: "/api/v1/streams/{stream_id}/cancel"
            body: "*"
        };
    }
}

message CreatePipelineRequest {
    string name = 1;
    cloud.api.profiles.v1.ProfileId profile_id = 2;
}

message PipelineRequest {
    string pipeline_id = 1;
}

message CreateStreamRequest {
    string pipeline_id = 1;
}

message StreamRequest {
    string stream_id = 1;
}

message ListResponse {
    repeated PipelineListItem items = 1;
}

message UpdatePipelineRequest {
    string id = 1;
    string name = 2;
    cloud.api.profiles.v1.ProfileId profile_id = 3;
}

message UpdatePipelineStreamRequest {
    string pipeline_id = 1;
    string job_id = 2;
    string user_id = 3;
    string client_address = 4;
    uint64 stream_id = 5;
    string stream_address = 6;
    PipelineStreamStatus status = 7;
}